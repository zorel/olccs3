class PostDecorator < Draper::Base
  decorates :post

  # Accessing Helpers
  #   You can access any helper via a proxy
  #
  #   Normal Usage: helpers.number_to_currency(2)
  #   Abbreviated : h.number_to_currency(2)
  #
  #   Or, optionally enable "lazy helpers" by including this module:
  #     include Draper::LazyHelpers
  #   Then use the helpers with no proxy:
  #     number_to_currency(2)

  # Defining an Interface
  #   Control access to the wrapped subject's methods using one of the following:
  #
  #   To allow only the listed methods (whitelist):
  #     allows :method1, :method2
  #
  #   To allow everything except the listed methods (blacklist):
  #     denies :method1, :method2

  # Presentation Methods
  #   Define your own instance methods, even overriding accessors
  #   generated by ActiveRecord:
  #
  #   def created_at
  #     h.content_tag :span, attributes["created_at"].strftime("%a %m/%d/%y"),
  #                   :class => 'timestamp'
  #   end

  def for_json
#    time = Time.strptime(post.time, '%Y%m%d%H%M%S').strftime('%H:%M:%S')
#    ua_or_login = post.info[0..20]
#    class_display = 'ua'
#
#    if post.login != ''
#      ua_or_login = post.login
#      class_display = 'login'
#    end
#    re = Regexp.new("(?<=\s|^|>|#)(?:(?:([0-2]?[0-9])\:([0-5][0-9])\:([0-5][0-9])|([0-2]?[0-9])([0-5][0-9])([0-5][0-9]))(?:[\:\^]([0-9]{1,2})|([¹²³]))?)|([0-2]?[0-9])\:([0-5][0-9])(?=\s|$|<)")
#    totoz = Regexp.new("\\\[:([0-9a-zA-Z \*\$@'_-]+)\\\]")
#    message = post.message.gsub(re) {|s|
#      "<span class='horloge_ref'>#{s}</span>"
#    }
#    message.gsub!(totoz) {|s|
#      "<span class='totoz'>#{s}</span>"
#    }
#    message.gsub!(/:([a-z0-9\+\-_]+):/) {|m|
#      if Emoji.names.include?($1)
#        "<img height='20' src='" + asset_path("#{1}.png") + "' style='vertical-align:middle' width='20' />"
#      else
#        m
#      end
#
#
#    }
#
#    display = post.login.presence || post.info
#    %>
#{
#    "id": <%=post.p_id%>,
#        "time":"<%=time%>",
#        "info":<%=raw post.info.to_json%>,
#    "class_display":"<%=class_display%>",
#    "ua_or_login":<%=raw ua_or_login.to_json%>,
#    "message":<%=raw message.to_json%>,
#    "rules": "<%=post.rules%>"
#}
  end
end
